components:
  schemas:
    Order:
      type: object
      properties:
        user_id:
          description: ObjectId del usuario que creó la orden
          type: string
        product_id:
          description: ObjectId del producto que agregó el usuario
          type: string
        quantity:
          description: Cantidad del producto agregado
          type: integer
          format: int64
        state:
          description: Estado de la nueva orden
          type: string
      example:
        _id: "ID de la nueva orden"
        user_id:
          _id: "ID del usuario que creo la orden"
          email: flor@coder.com
          photo: https://i.postimg.cc/wTgNFWhR/profile.png
        product_id:
          _id: "ID del producto de la orden"
          title: "Nombre del producto"
          photo: "URL de la imagen del producto"
          price: 50
          stock: 100
          category: "Categoría del producto"
        quantity: 1
        state: "topay"
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  responses:
    oCreate:
      type: object
      properties:
        statusCode:
          type: integer
          description: Estado de la solicitud
        response:
          type: object
          description: Documento creado
      example:
        statusCode: 201
        response:
          _id: "ID de la orden creada"
          user_id:
            _id: "ID del usuario dueño de la orden"
            email: flor@coder.com
            photo: https://i.postimg.cc/wTgNFWhR/profile.png
          product_id:
            _id: "ID del producto de la orden"
            title: "Nombre del producto"
            photo: "URL de la imagen del producto"
            price: 50
            stock: 100
          quantity: 1
          state: "paid"
    oRead:
      type: object
      properties:
        statusCode:
          type: integer
          description: Estado de la solicitud
        response:
          type: object
          description: Documentos de la solicitud
      example:
        statusCode: 200
        response:
          - _id: "ID de la orden creada"
            user_id:
              _id: "ID del usuario que creó la orden"
              email: flor@coder.com
              photo: https://i.postimg.cc/wTgNFWhR/profile.png
            product_id:
              _id: "ID del producto de la orden"
              title: "Nombre del producto"
              photo: "URL de la imagen del producto"
              price: 50
              owner_id: "ID del dueño real del producto"
              stock: 100
              category: "Categoría del producto"
            quantity: 1
            state: "paid"
    oUpdate:
      type: object
      properties:
        statusCode:
          type: integer
          description: Código de estado de la respuesta
        response:
          type: object
          description: Objeto del documento modificado
      example:
        statusCode: 200
        response:
          _id: "ID de la orden modificada"
          user_id:
            _id: "ID del usuario que creo la orden"
            email: flor@coder.com
            photo: https://i.postimg.cc/wTgNFWhR/profile.png
          product_id:
            _id: "ID del producto de la orden"
            title: "Nombre del producto"
            photo: "URL de la imagen del producto"
            price: 50
            stock: 100
          quantity: 1
          state: "paid"
    oReadOne:
      type: object
      properties:
        statusCode:
          type: integer
          description: Estado de la solicitud
        response:
          type: object
          description: Documentos de la solicitud
      example:
        statusCode: 200
        response:
          _id: "ID de la orden leída"
          user_id:
            _id: "ID del usuario que creo la orden"
            email: flor@coder.com
            photo: https://i.postimg.cc/wTgNFWhR/profile.png
          product_id:
            _id: "ID del producto de la orden"
            title: "Nombre del producto"
            photo: "URL de la imagen del producto"
            price: 50
            stock: 100
          quantity: 1
          state: "paid"
    oAuth:
      type: object
      properties:
        statusCode:
          type: integer
          description: Estado de la solicitud
        path:
          type: string
          description: Descripción del endpoint del error
        message:
          type: string
          description: Descripción del error
      example:
        statusCode: 401
        message: Invalid credentials
    oForbidden:
      type: object
      properties:
        statusCode:
          type: integer
          description: Estado de la solicitud
        path:
          type: string
          description: Descripción del endpoint del error
        message:
          type: string
          description: Descripción del error
      example:
        statusCode: 403
        message: Forbidden
    oNotFound:
      type: object
      properties:
        statusCode:
          type: integer
          description: Código de estado de la respuesta
        path:
          type: string
          description: Descripción del endpoint del error
        message:
          type: string
          description: Descripción del error
      example:
        statusCode: 404
        message: Not found
    oFatal:
      type: object
      properties:
        statusCode:
          type: integer
          description: Código de estado de la respuesta
        path:
          type: string
          description: Descripción del endpoint del error
        message:
          type: string
          description: Descripción del error
      example:
        statusCode: 500
        message: jwt must be provided
    oReport:
      type: object
      properties:
        statusCode:
          type: integer
          description: Estado de la solicitud
        response:
          type: object
          description: Documentos de la solicitud
      example:
        user_id: "ab6e51d2255eb00f83f3f82e"
        total: 100
        currency: "USD"
        date: "2024-02-05T19:13:11.476Z"
    oCheckout:
      type: object
      properties:
        statusCode:
          type: integer
          description: Estado de la solicitud
        response:
          type: object
          description: Documentos de la solicitud
paths:
  /api/orders:
    post:
      summary: Crear una nueva orden
      tags:
        - Orders
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Éxito en la creación de la orden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Create'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Auth'
        '403':
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Forbidden'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Fatal'
    get:
      summary: Leer las órdenes del usuario
      tags:
        - Orders
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Número de página a mostrar
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Número de documentos a mostrar por página
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: Nombre del producto a filtrar
      responses:
        '200':
          description: Éxito en la lectura de órdenes
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Read'
        '404':
          description: Documentos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Fatal'
  /api/orders/:oid:
    get:
      summary: Leer una órden del usuario
      tags:
        - Orders
      parameters:
        - name: oid
          in: path
          required: true
          description: ObjectId de la orden a buscar
          schema:
            $type: string
      responses:
        '200':
          description: Éxito en la lectura de la orden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ReadOne'
        '404':
          description: Documento no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Fatal'
    put:
      summary: Actualizar los datos de una orden
      tags:
        - Orders
      security:
        - cookieAuth: []
      parameters:
        - name: oid
          in: path
          required: true
          description: ObjectId de la orden
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Éxito al actualizar una orden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Update'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Auth'
        '403':
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Forbidden'
        '404':
          description: Documentos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Fatal'
    delete:
      summary: Eliminar una orden de la base de datos
      tags:
        - Orders
      security:
        - cookieAuth: []
      parameters:
        - name: oid
          in: path
          required: true
          description: ObjectId de la orden
          schema:
            type: string
      responses:
        '200':
          description: Éxito al eliminar una orden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Update'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Auth'
        '403':
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Forbidden'
        '404':
          description: Documentos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Fatal'
  /api/orders/total:
    get:
      summary: reporte de órdenes del usuario
      tags:
        - Orders
      parameters:
        - name: _id
          in: query
          required: false
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Éxito en la generación del reporte
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Checkout'
        '403':
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Forbidden'
        '404':
          description: Documentos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Fatal'
  /api/payments/checkout:
    post:
      summary: Crear una orden de pago con STRIPE
      tags:
        - Orders
      security:
        - cookieAuth: []
      responses:
        '201':
          description: Éxito en la creación de una orden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Checkout'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Auth'
        '403':
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Forbidden'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Fatal'